import * as React from 'react';
import styled from '../../../theme';
import rod from './images/rod.jpg';
import Buttons from './Buttons';
import FormContact from '../../Contact/FormContact';

const Avatar = styled.img`
  border-radius: 100%;
  height: 100px;
  width: 100px;
`;

const AboutGrid = styled.div`
  color: #6B6B6B;
  display: grid;
  justify-content: stretch;
  width: 100vw;
  @media(min-width: 680px){
    grid: 3fr 3fr 4fr / 200px auto;
    height: 100vh;
  }
  @media(max-width: 680px){
    grid: 2fr 5fr / 120px auto;
    height: 100%;
  }
`;

const Sidebar = styled.div`
  align-items: center;
  background-color: darkgray;
  color: white;
  display: flex;
  flex-direction: column;
  height: 100%;
  padding: 40px 0;
  width: 100%;
`;

const SidebarAvatar = styled(Sidebar)`
  grid-column: 1 / 2;
  grid-row: 1 / 2;
  justify-content: center;
`;

export const SidebarNav = styled(Sidebar)`
  grid-column: 1 / 2;
  grid-row: 2 / 3;
  justify-content: space-evenly;
`;

const SidebarFooter = styled(Sidebar)`
  grid-column: 1 / 2;
  grid-row: 3 / 4;
  justify-content: flex-end;
`;

const AboutContent = styled.div`
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  grid-column: 2 / 3;
  grid-row: 1 / 4;
  height: 100%;
  justify-content: center;
  min-height: 320px;
  width: 100%;
`;
const AboutContentBox = styled.div`
  min-width: 300px;
  max-width: 800px;
  @media(min-width: 680px){
    padding: 0;
  }
  @media(max-width: 680px){
    padding: 20px 5px;
  }
`;

const AboutH3 = styled.h3`
  font-family: ${props => props.theme.fontFamily};
  font-size: 40px;
  font-weight: 700;
`;

const AboutH4 = styled.h4`
  font-family: ${props => props.theme.fontFamily};
  font-size: 30px;
`;

const Keywords = styled.div`
  color: orange;
  margin: -10px 0 40px 0;
  ::before {
    content: 'ðŸš€ ';
  };
`;

const Site = () => (
  <AboutContentBox>
    <AboutH3>About this site</AboutH3>
    <Keywords>Go, gRPC, Protocol Buffers, TypeScript, React, Redux, Styled Components</Keywords>
    <AboutH4>background</AboutH4>
    <p>
      This site is built TypeScript, React and Go. The Frontend communicates with the Go server over gRPC.
      I started by hacking Improbable's hackernews clone to reverse engineer what's required to use gRPC for web.
      The goals were simple, learn more about gRPC and figure out how to connect from a server to an app.
      However, at the same time, I was faced with the reality that my neglected portfolio needed some serious love.
      With an impending move back to Australia, I didn't have time for both, so here we are...
    </p>
    <AboutH4>server</AboutH4>
    <p>
      I chose Go for the server, as it is fast and easy to use.
      Keeping it relatively simple, while leaving scope for future hacking, I added BoltDB and the storm library,
      for easy CRUD operations.
    </p>
    <AboutH4>frontend</AboutH4>
    <p>
      The frontend consists of a React web app with a Redux store connected to gRPC middleware.
      The app is written in TypeScript, which is my preference for React projects,
      but also required to make use of the types generated by protoc.
    </p>
  </AboutContentBox>
);

const Me = () => (
  <AboutContentBox>
    <AboutH3>About Rod Lewis</AboutH3>
    <Keywords>Surfer, Dad, Developer</Keywords>
    <AboutH4>background</AboutH4>
    <p>Developer, entrepreneur, technical.</p>
    <p>
      My first real interest in development was at the end of 1997 after the release of GTA.
      I was creating custom cars, bikes and maps for the PC game with my brother and we had a GeoCities site with some
      awesome (*cough) flash animations.
      A few years later, I'm preparing to start University and my life gets flipped upside down,
      by serious family issues. Opting to stay at home, I started my first business.
      Roll on a couple of years, contractor mistakes are costing profitability and I've had enough.
      I took a breather, did the usual travel and made some hard decisions. Returned home, enrolled in a
      network infrastructure bootcamp, followed up with enough certificates to make my head spin and
      landed my dream job...
      Well not quite, my dream job was substituted with running tech support at a PC manufacturer.
      My next move to work for an Aussie tech startup (since ASX listed), gave me leverage to wrangle a
      systems infrastructure role. A few more tech startups and country hops later, complemented by a
      big shift in the scope of that role, back to something closer to when I started
      and I'm yearning for the next challenge.
      I wanted to get back to what excited me about tech in the first place
      My partner had just accepted a position in Germany, so I decided to move with her and take a year to catch up
      on modern frontend development. I wasn't quite prepared for the sheer volume of options, it's awesome. Really,
      there is never a reason to get bored, as there is always something new to learn. Anyway, from there to now,
      I'm working freelance and we have moved back to Australia.
    </p>
    <AboutH4>freetime</AboutH4>
    <p>
      I'm a little obsessed with learning, perhaps forgetting more than I learn, but enjoying the process.
      When I take a break, I like to go to the beach with my wife and son,
      with the hope of sneaking out for a quick surf.
    </p>
  </AboutContentBox>
);

interface AboutState {
  page: string;
}

class About extends React.Component<{}, AboutState> {
  public state = {
    page: 'site',
  };
  public handleClick = (page: string) => {
    this.setState({ page });
  }
  public render() {
    return (
      <AboutGrid>
        <SidebarAvatar>
          <Avatar src={rod} alt="Rod's profile picture" />
        </SidebarAvatar>
        <Buttons handleClick={this.handleClick} page={this.state.page} />
        <SidebarFooter>
          Rod Lewis Â©2018
        </SidebarFooter>
        <AboutContent>
          {this.state.page === 'site' && <Site />}
          {this.state.page === 'rod' && <Me />}
          {this.state.page === 'contact' && <FormContact />}
        </AboutContent>
      </AboutGrid >
    );
  }
}

export default About;
